import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author Jesus Llaya
 */

public class Comparacion extends javax.swing.JPanel {

    private Matriz puzzleInicio;
    private Matriz puzzleFin;
    private Map<String, Matriz> nodosGenerados;
    private String inicialEstado;
    private String finalEstado;
    private Busqueda bus;

    public Comparacion() {
        initComponents();
        this.setLocale(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jbtn_buscar = new javax.swing.JButton();
        jbtn_salir = new javax.swing.JButton();
        jbtn_limpiar = new javax.swing.JButton();
        jtxtNodosAnalizadosAnchura = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtxtLargoBusquedaAnchura = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtM11 = new javax.swing.JTextField();
        jtxtM12 = new javax.swing.JTextField();
        jtxtM13 = new javax.swing.JTextField();
        jtxtM21 = new javax.swing.JTextField();
        jtxtM22 = new javax.swing.JTextField();
        jtxtM23 = new javax.swing.JTextField();
        jtxtM31 = new javax.swing.JTextField();
        jtxtM32 = new javax.swing.JTextField();
        jtxtM33 = new javax.swing.JTextField();
        jtxtN12 = new javax.swing.JTextField();
        jtxtN13 = new javax.swing.JTextField();
        jtxtN21 = new javax.swing.JTextField();
        jtxtN22 = new javax.swing.JTextField();
        jtxtN23 = new javax.swing.JTextField();
        jtxtN31 = new javax.swing.JTextField();
        jtxtN32 = new javax.swing.JTextField();
        jtxtN33 = new javax.swing.JTextField();
        jtxtN11 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxtNodosAnalizadosProfundidad = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtxtLargoBusquedaProfundidad = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Busquedas No Informadas");

        jLabel2.setText("Estado Inicial:");

        jLabel8.setText("Nodos Analizados:");

        jbtn_buscar.setText("Buscar");
        jbtn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_buscarActionPerformed(evt);
            }
        });

        jbtn_salir.setText("Salir");
        jbtn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_salirActionPerformed(evt);
            }
        });

        jbtn_limpiar.setText("Limpiar");
        jbtn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_limpiarActionPerformed(evt);
            }
        });

        jtxtNodosAnalizadosAnchura.setEditable(false);
        jtxtNodosAnalizadosAnchura.setBackground(new java.awt.Color(255, 255, 255));
        jtxtNodosAnalizadosAnchura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNodosAnalizadosAnchuraActionPerformed(evt);
            }
        });
        jtxtNodosAnalizadosAnchura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNodosAnalizadosAnchuraKeyTyped(evt);
            }
        });

        jLabel9.setText("Estado Final:");

        jLabel10.setText("Largo Busqueda:");

        jtxtLargoBusquedaAnchura.setEditable(false);
        jtxtLargoBusquedaAnchura.setBackground(new java.awt.Color(255, 255, 255));
        jtxtLargoBusquedaAnchura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtLargoBusquedaAnchuraActionPerformed(evt);
            }
        });
        jtxtLargoBusquedaAnchura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtLargoBusquedaAnchuraKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Parametros");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Resultados");

        jtxtM11.setToolTipText("");
        jtxtM11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM11KeyTyped(evt);
            }
        });

        jtxtM12.setToolTipText("");
        jtxtM12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM12KeyTyped(evt);
            }
        });

        jtxtM13.setToolTipText("");
        jtxtM13.setNextFocusableComponent(jtxtM21);
        jtxtM13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM13KeyTyped(evt);
            }
        });

        jtxtM21.setToolTipText("");
        jtxtM21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM21KeyTyped(evt);
            }
        });

        jtxtM22.setToolTipText("");
        jtxtM22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM22KeyTyped(evt);
            }
        });

        jtxtM23.setToolTipText("");
        jtxtM23.setNextFocusableComponent(jtxtM31);
        jtxtM23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM23KeyTyped(evt);
            }
        });

        jtxtM31.setToolTipText("");
        jtxtM31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM31KeyTyped(evt);
            }
        });

        jtxtM32.setToolTipText("");
        jtxtM32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtM32ActionPerformed(evt);
            }
        });
        jtxtM32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM32KeyTyped(evt);
            }
        });

        jtxtM33.setToolTipText("");
        jtxtM33.setNextFocusableComponent(jtxtN11);
        jtxtM33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtM33KeyTyped(evt);
            }
        });

        jtxtN12.setToolTipText("");
        jtxtN12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN12KeyTyped(evt);
            }
        });

        jtxtN13.setToolTipText("");
        jtxtN13.setNextFocusableComponent(jtxtN21);
        jtxtN13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN13KeyTyped(evt);
            }
        });

        jtxtN21.setToolTipText("");
        jtxtN21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN21KeyTyped(evt);
            }
        });

        jtxtN22.setToolTipText("");
        jtxtN22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN22KeyTyped(evt);
            }
        });

        jtxtN23.setToolTipText("");
        jtxtN23.setNextFocusableComponent(jtxtN31);
        jtxtN23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN23KeyTyped(evt);
            }
        });

        jtxtN31.setToolTipText("");
        jtxtN31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN31KeyTyped(evt);
            }
        });

        jtxtN32.setToolTipText("");
        jtxtN32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN32KeyTyped(evt);
            }
        });

        jtxtN33.setToolTipText("");
        jtxtN33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN33KeyTyped(evt);
            }
        });

        jtxtN11.setToolTipText("");
        jtxtN11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtN11KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Busqueda Primero en Anchura");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Busqueda Primero en Profundidad");

        jLabel11.setText("Nodos Analizados:");

        jtxtNodosAnalizadosProfundidad.setEditable(false);
        jtxtNodosAnalizadosProfundidad.setBackground(new java.awt.Color(255, 255, 255));
        jtxtNodosAnalizadosProfundidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNodosAnalizadosProfundidadActionPerformed(evt);
            }
        });
        jtxtNodosAnalizadosProfundidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtNodosAnalizadosProfundidadKeyTyped(evt);
            }
        });

        jLabel12.setText("Largo Busqueda:");

        jtxtLargoBusquedaProfundidad.setEditable(false);
        jtxtLargoBusquedaProfundidad.setBackground(new java.awt.Color(255, 255, 255));
        jtxtLargoBusquedaProfundidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtLargoBusquedaProfundidadActionPerformed(evt);
            }
        });
        jtxtLargoBusquedaProfundidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtLargoBusquedaProfundidadKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jbtn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtM21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtM11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtM31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtM33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel2))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jtxtNodosAnalizadosAnchura, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jtxtLargoBusquedaAnchura, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jtxtNodosAnalizadosProfundidad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jtxtLargoBusquedaProfundidad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtN21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtN11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtN31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtN33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtM11)
                            .addComponent(jtxtM12)
                            .addComponent(jtxtM13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtM21)
                            .addComponent(jtxtM22)
                            .addComponent(jtxtM23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtM31)
                            .addComponent(jtxtM32)
                            .addComponent(jtxtM33)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtN11)
                            .addComponent(jtxtN12)
                            .addComponent(jtxtN13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtN21)
                            .addComponent(jtxtN22)
                            .addComponent(jtxtN23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jtxtN31)
                            .addComponent(jtxtN32)
                            .addComponent(jtxtN33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtNodosAnalizadosAnchura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtLargoBusquedaAnchura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtNodosAnalizadosProfundidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtLargoBusquedaProfundidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_buscarActionPerformed
        try {
            
            inicialEstado = jtxtM11.getText()+","+jtxtM12.getText()+","+jtxtM13.getText()+","
                           +jtxtM21.getText()+","+jtxtM22.getText()+","+jtxtM23.getText()+","
                           +jtxtM31.getText()+","+jtxtM32.getText()+","+jtxtM33.getText();
            finalEstado = jtxtN11.getText()+","+jtxtN12.getText()+","+jtxtN13.getText()+","
                         +jtxtN21.getText()+","+jtxtN22.getText()+","+jtxtN23.getText()+","
                         +jtxtN31.getText()+","+jtxtN32.getText()+","+jtxtN33.getText();

            puzzleInicio = new Matriz(inicialEstado);
            puzzleFin = new Matriz(finalEstado);

            bus = new Busqueda(puzzleInicio, puzzleFin);
            
            bus.realizarBusquedaAnchura();
            
            int nodosAnalizadosAnchura = bus.getNodosAnalizadosAnchura();
            this.jtxtNodosAnalizadosAnchura.setText(String.valueOf(nodosAnalizadosAnchura));
            
            int largoBusquedaAnchura = bus.getLargoBusquedaAnchura();
            this.jtxtLargoBusquedaAnchura.setText(String.valueOf(largoBusquedaAnchura));
            
            bus.realizarBusquedaProfundidad();
            
            int nodosAnalizadoProfunidad = bus.getNodosAnalizadosProfundidad();
            this.jtxtNodosAnalizadosProfundidad.setText(String.valueOf(nodosAnalizadoProfunidad));
            
            int largoBusquedaProfundidad = bus.getLargoBusquedaProfundida();
            this.jtxtLargoBusquedaProfundidad.setText(String.valueOf(largoBusquedaProfundidad));
            
            if(nodosAnalizadosAnchura < nodosAnalizadoProfunidad)
            {
                this.jtxtNodosAnalizadosAnchura.setBackground(Color.GREEN);
            }else{
                this.jtxtNodosAnalizadosProfundidad.setBackground(Color.GREEN);
            }
            
            if(largoBusquedaAnchura < largoBusquedaProfundidad )
            {
                this.jtxtLargoBusquedaAnchura.setBackground(Color.GREEN);
            }else{
                this.jtxtLargoBusquedaProfundidad.setBackground(Color.GREEN);
            }


        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "No se ingresaron Todos los datos!!!", "Validando Datos", WIDTH);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "No se ingresaron Todos los datos!!!", "Validando Datos", WIDTH);
        }
    }//GEN-LAST:event_jbtn_buscarActionPerformed

    private void jbtn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_salirActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "¿Desea realmente salir del sistema?",
                "Salir del sistema", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jbtn_salirActionPerformed

    private void jbtn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_limpiarActionPerformed
        // TODO add your handling code here:
        jtxtM11.setText(null);
        jtxtM12.setText(null);
        jtxtM13.setText(null);
        jtxtM21.setText(null);
        jtxtM22.setText(null);
        jtxtM23.setText(null);
        jtxtM31.setText(null);
        jtxtM32.setText(null);
        jtxtM33.setText(null);
        jtxtN11.setText(null);
        jtxtN12.setText(null);
        jtxtN13.setText(null);
        jtxtN21.setText(null);
        jtxtN22.setText(null);
        jtxtN23.setText(null);
        jtxtN31.setText(null);
        jtxtN32.setText(null);
        jtxtN33.setText(null);
        
        jtxtLargoBusquedaAnchura.setText(null);
        jtxtLargoBusquedaAnchura.setBackground(Color.white);
        jtxtNodosAnalizadosAnchura.setText(null);
        jtxtNodosAnalizadosAnchura.setBackground(Color.white);
        
        jtxtLargoBusquedaProfundidad.setText(null);
        jtxtLargoBusquedaProfundidad.setBackground(Color.white);
        jtxtNodosAnalizadosProfundidad.setText(null);
        jtxtNodosAnalizadosProfundidad.setBackground(Color.white);
        
        jtxtM11.transferFocus();

    }//GEN-LAST:event_jbtn_limpiarActionPerformed

    private void jtxtNodosAnalizadosAnchuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNodosAnalizadosAnchuraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNodosAnalizadosAnchuraActionPerformed

    private void jtxtNodosAnalizadosAnchuraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNodosAnalizadosAnchuraKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNodosAnalizadosAnchuraKeyTyped

    private void jtxtLargoBusquedaAnchuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtLargoBusquedaAnchuraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtLargoBusquedaAnchuraActionPerformed

    private void jtxtLargoBusquedaAnchuraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtLargoBusquedaAnchuraKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtLargoBusquedaAnchuraKeyTyped

    private void jtxtM32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtM32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtM32ActionPerformed

    private void jtxtNodosAnalizadosProfundidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNodosAnalizadosProfundidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNodosAnalizadosProfundidadActionPerformed

    private void jtxtNodosAnalizadosProfundidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNodosAnalizadosProfundidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNodosAnalizadosProfundidadKeyTyped

    private void jtxtLargoBusquedaProfundidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtLargoBusquedaProfundidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtLargoBusquedaProfundidadActionPerformed

    private void jtxtLargoBusquedaProfundidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtLargoBusquedaProfundidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtLargoBusquedaProfundidadKeyTyped

    private void jtxtM11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM11KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM11.transferFocus();
        }
    }//GEN-LAST:event_jtxtM11KeyTyped

    private void jtxtM12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM12KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM12.transferFocus();
        }
    }//GEN-LAST:event_jtxtM12KeyTyped

    private void jtxtM13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM13KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM13.transferFocus();
        }
    }//GEN-LAST:event_jtxtM13KeyTyped

    private void jtxtM21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM21KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM21.transferFocus();
        }
    }//GEN-LAST:event_jtxtM21KeyTyped

    private void jtxtM22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM22KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM22.transferFocus();
        }
    }//GEN-LAST:event_jtxtM22KeyTyped

    private void jtxtM23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM23KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM23.transferFocus();
        }
    }//GEN-LAST:event_jtxtM23KeyTyped

    private void jtxtM31KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM31KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM31.transferFocus();
        }
    }//GEN-LAST:event_jtxtM31KeyTyped

    private void jtxtM32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM32KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM32.transferFocus();
        }
    }//GEN-LAST:event_jtxtM32KeyTyped

    private void jtxtM33KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtM33KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtM33.transferFocus();
        }
    }//GEN-LAST:event_jtxtM33KeyTyped

    private void jtxtN11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN11KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN11.transferFocus();
        }
    }//GEN-LAST:event_jtxtN11KeyTyped

    private void jtxtN12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN12KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN12.transferFocus();
        }
    }//GEN-LAST:event_jtxtN12KeyTyped

    private void jtxtN13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN13KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN13.transferFocus();
        }
    }//GEN-LAST:event_jtxtN13KeyTyped

    private void jtxtN21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN21KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN21.transferFocus();
        }
    }//GEN-LAST:event_jtxtN21KeyTyped

    private void jtxtN22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN22KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN22.transferFocus();
        }
    }//GEN-LAST:event_jtxtN22KeyTyped

    private void jtxtN23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN23KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN23.transferFocus();
        }
    }//GEN-LAST:event_jtxtN23KeyTyped

    private void jtxtN31KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN31KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN31.transferFocus();
        }
    }//GEN-LAST:event_jtxtN31KeyTyped

    private void jtxtN32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN32KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN32.transferFocus();
        }
    }//GEN-LAST:event_jtxtN32KeyTyped

    private void jtxtN33KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtN33KeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 241 || k == 209) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(null, "No puede ingresar letras!!!", "Validando Datos",
                JOptionPane.ERROR_MESSAGE);
        }

        if (k == 10) {//si se presiona enter
            //transfiere el foco
            jtxtN33.transferFocus();
        }
    }//GEN-LAST:event_jtxtN33KeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbtn_buscar;
    private javax.swing.JButton jbtn_limpiar;
    private javax.swing.JButton jbtn_salir;
    private javax.swing.JTextField jtxtLargoBusquedaAnchura;
    private javax.swing.JTextField jtxtLargoBusquedaProfundidad;
    private javax.swing.JTextField jtxtM11;
    private javax.swing.JTextField jtxtM12;
    private javax.swing.JTextField jtxtM13;
    private javax.swing.JTextField jtxtM21;
    private javax.swing.JTextField jtxtM22;
    private javax.swing.JTextField jtxtM23;
    private javax.swing.JTextField jtxtM31;
    private javax.swing.JTextField jtxtM32;
    private javax.swing.JTextField jtxtM33;
    private javax.swing.JTextField jtxtN11;
    private javax.swing.JTextField jtxtN12;
    private javax.swing.JTextField jtxtN13;
    private javax.swing.JTextField jtxtN21;
    private javax.swing.JTextField jtxtN22;
    private javax.swing.JTextField jtxtN23;
    private javax.swing.JTextField jtxtN31;
    private javax.swing.JTextField jtxtN32;
    private javax.swing.JTextField jtxtN33;
    private javax.swing.JTextField jtxtNodosAnalizadosAnchura;
    private javax.swing.JTextField jtxtNodosAnalizadosProfundidad;
    // End of variables declaration//GEN-END:variables

}
